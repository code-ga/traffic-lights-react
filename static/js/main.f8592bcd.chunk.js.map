{"version":3,"sources":["component/trafficlights.js","App.js","reportWebVitals.js","index.js"],"names":["trafficlights","currentColor","this","props","console","log","className","classNames","Component","App","timers","state","setInterval","setState","getNextColor","time_remaining","color","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0SA4BeA,E,4JArBX,WACI,IAAMC,EAAiBC,KAAKC,MAAtBF,aAEN,OADAG,QAAQC,IAAI,eAAeJ,GAEvB,sBAAKK,UAAU,gBAAf,UACI,qBAAKA,UAAWC,IAAW,OAAQ,MAAO,CAClC,OAVd,IAUuBN,MAGjB,qBAAKK,UAAWC,IAAW,OAAQ,SAAU,CACrC,OAZX,IAYoBN,MAGjB,qBAAKK,UAAWC,IAAW,OAAQ,OAAQ,CACnC,OAjBb,IAiBsBN,a,GAfLO,aC2CbC,E,kDAxCb,aAAgB,IAAD,8BACb,gBACKC,OAAS,IACd,EAAKC,MAAQ,CAAE,aAPT,EAO6B,eAAiB,EAAKD,QACzDE,aAAY,WACV,EAAKC,SAAS,CAAE,aAAgB,EAAKC,aAAa,EAAKH,MAAMV,cAAe,eAAkB,EAAKS,WAClG,EAAKA,QACRE,aAAY,WACV,EAAKC,SAAS,CAAC,eAAiB,EAAKF,MAAMI,eAAe,QAC1D,KATW,E,gDAWb,SAAaC,GACX,OAAQA,GACN,KAjBE,EAkBA,OAjBC,EAkBH,KAlBG,EAmBD,OAlBG,EAmBL,QACE,OAtBA,K,oBAyBR,WACE,IAAI,EAAmCd,KAAKS,MAAtCV,EAAN,EAAMA,aAAcc,EAApB,EAAoBA,eACpB,OACE,sBAAKT,UAAU,MAAf,UACE,qBAAKA,UAAWC,IAAW,sBAAuB,CAChD,QA9BA,IA8BWN,GACV,CACD,SA/BC,IA+BUA,GACV,CACD,UAhCG,IAgCUA,IALf,SAOIc,EAAiB,MACrB,cAAC,EAAD,CAAed,aAAcA,W,GAlCnBO,aCIHS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f8592bcd.chunk.js","sourcesContent":["import \"./trafficlights.css\"\r\nimport React, { Component } from 'react'\r\nimport classNames from 'classnames'\r\nvar red = 0\r\nvar blue = 1\r\nvar orange = 2\r\nclass trafficlights extends Component{\r\n    render() {\r\n        var { currentColor } = this.props\r\n        console.log(\"render .....\",currentColor);        \r\n        return (\r\n            <div className=\"trafficlights\">\r\n                <div className={classNames(\"bulb\", \"red\", {\r\n                        \"active\":currentColor === red\r\n                    })}>\r\n                </div>\r\n                <div className={classNames(\"bulb\", \"orange\", {\r\n                        \"active\":currentColor === orange\r\n                    })}>\r\n                </div>\r\n                <div className={classNames(\"bulb\", \"blue\", {\r\n                        \"active\":currentColor === blue\r\n                })}>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default trafficlights","import './App.css';\nimport React,{Component} from 'react'\nimport Trafficlights from './component/trafficlights'\nimport classNames from 'classnames'\n\nvar red = 0\nvar blue = 1\nvar orange = 2\nclass App extends Component{\n  constructor () {\n    super()\n    this.timers = 60000\n    this.state = { \"currentColor\": red,\"time_remaining\":this.timers }\n    setInterval(() => {\n      this.setState({ \"currentColor\": this.getNextColor(this.state.currentColor), \"time_remaining\": this.timers })\n    }, this.timers)\n    setInterval(() => {\n      this.setState({\"time_remaining\":this.state.time_remaining-1000})\n    },1000)\n    }\n    getNextColor(color) {\n      switch (color) {\n        case red:\n          return blue\n        case blue:\n          return orange\n        default:\n          return red\n      }\n    }\n  render() {\n    var { currentColor, time_remaining } = this.state\n    return (\n      <div className=\"App\">\n        <div className={classNames(\"trafficlights_timer\", {\n          \"redback\": currentColor === red,\n        }, {\n          \"blueback\":currentColor === blue\n        }, {\n          \"orageback\": currentColor === orange\n        }\n        )}>{time_remaining / 1000}</div>\n        <Trafficlights currentColor={currentColor}/>\n      </div>\n  );\n  }\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}